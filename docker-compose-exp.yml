version: '3.9'
services:
  nginx:
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - twitter_static:/usr/share/nginx/html/twitter/
      - el-shopperino-images:/usr/share/nginx/html/images/
    depends_on:
      - twitter-backend

  el-shopperino-backend:
    image: el_shopperino_backend
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/backend/el_shopperino-Dockerfile
    # command: gunicorn el_shopperino_project.el_shopperino_core.wsgi --bind 0.0.0.0:8000 --workers=4 --threads 4
    volumes:
      - el-shopperino-images:/app/media/images
    ports:
      - 8000:8000
    depends_on:
      - postgresdb

  ijra-backend:
    image: ijra_backend
    build:
      context: .
      dockerfile: ./docker/backend/ijra-Dockerfile
    # volumes:
    #   - ./backend/ijra_project/:/app/
    environment:
      - FLASK_APP=run.py
    ports:
      - 8001:8001
    entrypoint: ./flask-entrypoint.sh
    depends_on:
      - postgresdb

  twitter-backend:
    image: twitter_backend
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/backend/twitter-Dockerfile
    volumes:
      - ./backend/twitter_project/:/twitter/
      - twitter_static:/twitter/static
    ports:
      - 8002:8002
    depends_on:
      - postgresdb

  postgresdb:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data/

volumes:
  pgdata:
  twitter_static:
  el_shopperino_images:


